.\" $Id: newpath.1,v 1.6 2024/07/12 23:49:47 tom Exp $
.TH NEWPATH 1 2024-07-12 "MiscTools" "User commands"
.hy 0
.SH NAME
newpath \-
review or update the PATH
.SH SYNOPSIS
.B newpath
[ \fIoptions\fP [ \fIdirectories\fP ]]
[ - \fIcommand\fP ]
.
.SH DESCRIPTION
Echoes the \fBPATH\fP environment variable with the given directories added,
(the default) or removed.
This program was written in June 1994, and is used in a variety
of shell environments.
.PP
After the options and directory-parameters,
you can put a '\-' before a command
to invoke it with the environment variable updated,
rather than echoing the result to standard output.
.PP
When adding directories, \fBnewpath\fP resolves symbolic links
using the \fIrealpath\fP(3) function.
.
.SH OPTIONS
.TP 5
.B \-0
prepend the pathname where \fBnewpath\fP is found.
.TP 5
.BI \-a NAME
modify path after given \fINAME\fP.
.TP 5
.B \-b
put new arguments before existing path
.TP 5
.B \-d
remove duplicates/non-directory items
.TP 5
.B \-e
put new arguments after end of path
.TP 5
.B \-f
allow filenames to match, as well as directories
.TP 5
.BI \-n NAME
specify environment-variable to use (default: PATH)
.TP 5
.B \-p
print in C-shell form
.TP 5
.B \-r
remove arguments from path
.TP 5
.B \-v
verbose, shows the path with one directory per line.
.
.
.SH BUGS
.
Probably.
.
.SH EXAMPLES
.
\fBNewpath\fR is used in the shell initialization script to
set up customized PATH (or PATH-like) environment variables
which correspond to the directories which exist.
For example, it is used in systems that have NFS-mounted
home directories with different application directories on each host.
.PP
Because some of the utilities in this collection have the same name
as a few other programs,
it is helpful to install the collection in a directory
normally not on the PATH,
and (with a symbolic link to \fBnewpath\fP in a directory on the PATH),
use \fBnewpath\fP to augment the path to include those utilities.
.PP
This C shell script checks for the link, and uses it:
.sp
.RS
.EX
foreach dir ( /usr/bin /usr/local/bin )
    if ( -f $dir/newpath ) then
        set path=(`newpath -0dp`)
        break
    endif
end
.EE
.RE
.PP
If the link is assumed, either C or POSIX shell can augment the path
in a single line:
.sp
.RS
.EX
set path=(`newpath -0dp`)
PATH=`newpath -0d`
.EE
.RE
.
.SH SEE ALSO
sh(1)
